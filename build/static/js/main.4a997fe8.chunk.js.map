{"version":3,"sources":["routes/api/getApiUri.ts","routes/components/header.tsx","routes/components/HorizonIndexCard.tsx","routes/main/home.tsx","routes/main/login.tsx","routes/util/notfound.tsx","routes/util/logout.tsx","routes/main/register.tsx","routes/main/mypage.tsx","routes/util/FindPassword.tsx","routes/util/UploadProducts.tsx","routes/service/components/Product.tsx","routes/service/components/ProductInfoList.tsx","routes/service/Comsil.tsx","routes/service/Utility.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["baseURL","Header","props","state","isLogin","checkIsLogin","a","sessionStorage","getItem","setState","queryHeader","publicIp","v4","queryBody","publicip","fetch","apiUri","method","body","JSON","stringify","headers","then","res","json","data","userid","localStorage","setItem","checkLocalToken","token","document","title","this","loginLoginBar","className","href","unloginLoginBar","style","window","innerWidth","fontSize","marginTop","Component","GlobalStyle","createGlobalStyle","Wrapper","styled","span","HorizonIndexCard","img","content","link","handleOpenLink","location","replace","WhiteCard","onClick","margin","backgroundColor","div","CardWrapper","Home","unLoginHome","Button","variant","size","width","LoginHome","color","Login","styles","isHinder","id","password","errorMessage","isRemember","handleHinder","handleLogin","uid","toString","message","catch","e","alert","handleChange","target","name","value","handleEnterKey","keyCode","handleToggle","letterSpacing","InputGroup","FormControl","placeholder","type","onChange","onKeyDown","Append","Form","Check","label","Notfound","Logout","removeItem","Spinner","marginBottom","animation","Register","passwordCheck","nickname","email","isLoading","formErrors","verifyForm","length","handleOverlap","RegExp","test","handleRegister","status","overlap","disabled","Mypage","fontWeight","FindPassword","UploadProducts","Product","maclink","handleOpenMacLink","windowLink","windowMacLink","marginRight","src","alt","display","justifyContent","ProductList","list","parse","map","info","key","console","log","defaultProps","Comsil","handleDataRecieve","result","Utilty","App","exact","path","component","Utility","React","Boolean","hostname","match","require","config","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4a997fe8.chunk.js","sourcesContent":["export const baseURL =\n  process.env.NODE_ENV === 'development'\n    ? 'http://localhost:4000'\n    : 'https://api.dodoli.net';\n\nexport default baseURL;\n","import React, { Component } from 'react';\nimport apiUri from '../api/getApiUri';\n\nimport publicIp from 'public-ip';\n\nimport '../../styles/index.scss';\n\nclass Header extends Component {\n  constructor(props: any) {\n    super(props);\n    document.title = 'MARKTWO';\n  }\n\n  state = {\n    isLogin: false\n  };\n\n  checkIsLogin = async () => {\n    if (!sessionStorage.getItem('token')) {\n      this.setState({ isLogin: false });\n      return;\n    }\n\n    const queryHeader: any = {\n      'Content-Type': 'application/json',\n      'x-access-token': sessionStorage.getItem('token') || 'null'\n    };\n\n    const queryBody: any = {\n      publicip: await publicIp.v4()\n    };\n\n    await fetch(apiUri + '/auth/verify', {\n      method: 'POST',\n      body: JSON.stringify(queryBody),\n      headers: queryHeader\n    })\n      .then(res => res.json())\n      .then(data => {\n        if (!data.userid) {\n          localStorage.setItem('token', '');\n          sessionStorage.setItem('userid', '');\n          return;\n        }\n        this.setState({ isLogin: true });\n        sessionStorage.setItem('userid', data.userid);\n      });\n  };\n\n  checkLocalToken = async () => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      sessionStorage.setItem('token', token);\n    }\n  };\n\n  async componentWillMount() {\n    await this.checkLocalToken();\n    await this.checkIsLogin();\n  }\n\n  render() {\n    const loginLoginBar = (\n      <span>\n        <a className=\"Module-loginbutton\" href=\"/register\">\n          REGISTER\n        </a>\n        <a className=\"Module-loginbutton\" href=\"/login\">\n          LOGIN\n        </a>\n      </span>\n    );\n\n    const unloginLoginBar = (\n      <span>\n        <a className=\"Module-loginbutton\" href=\"/logout\">\n          LOGOUT\n        </a>\n        <a className=\"Module-loginbutton\" href=\"/mypage\">\n          MYPAGE\n        </a>\n      </span>\n    );\n\n    return (\n      <>\n        <div className=\"Background-header\">\n          <div>\n            <a\n              className=\"Module-mainlogo\"\n              style={\n                window.innerWidth > 500\n                  ? { fontSize: '3rem' }\n                  : { fontSize: '2rem', marginTop: '0.5rem' }\n              }\n              href=\"/\"\n            >\n              MARKTWO\n            </a>\n\n            {!this.state.isLogin ? loginLoginBar : unloginLoginBar}\n          </div>\n          <br />\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from 'react';\nimport '../../styles/tailwind.css';\nimport styled, { createGlobalStyle } from 'styled-components';\nimport './HorizonIndexCard.scss';\nconst GlobalStyle = createGlobalStyle`\n* {\n\n}\n.form-control{\n  \n  background-color: rgb(60,60,60) !important;\n  color: white !important;\n  border-color: black !important;\n\n}`;\n\nconst Wrapper = styled.span`\n  color: white;\n  background-color: rgb(24, 24, 24);\n`;\n\nexport default class HorizonIndexCard extends Component<any> {\n  constructor(props: any) {\n    super(props);\n  }\n  state = {\n    img: this.props.img,\n    title: this.props.title,\n    content: this.props.content,\n    link: this.props.link\n  };\n  handleOpenLink = () => {\n    window.location.replace(this.state.link);\n  };\n  render() {\n    const WhiteCard = (\n      <div\n        onClick={this.handleOpenLink}\n        className=\"max-w-sm rounded overflow-hidden shadow-lg Module-background\"\n        style={{ margin: '1rem', backgroundColor: 'rgb(60,60,60)' }}\n      >\n        <div onClick={this.handleOpenLink} className=\"px-6 py-4\">\n          <div className=\"font-bold text-xl mb-2\" style={{ fontSize: '5rem' }}>\n            {this.state.title}\n          </div>\n          <p className=\"text-700 text-base\" onClick={this.handleOpenLink}>\n            {this.state.content}\n          </p>\n        </div>\n      </div>\n    );\n    return (\n      <>\n        <GlobalStyle />\n        <Wrapper>{WhiteCard}</Wrapper>\n      </>\n    );\n  }\n}\n","import React, { Component, Fragment } from 'react';\nimport Bootstrap, { Button } from 'react-bootstrap';\nimport HorizonIndexCard from '../components/HorizonIndexCard';\n\nimport styled, { createGlobalStyle } from 'styled-components';\nimport '../../styles/index.scss';\n\nconst GlobalStyle = createGlobalStyle`\nbody {\n  /* margin: 0;\n  padding: 0; */\n  background-color:rgb(24,24,24);\n  color:white;\n  justify-content:center;\n \n}\n.form-control{\n  background-color: rgb(60,60,60) !important;\n  color: white !important;\n  border-color: black !important;\n}`;\n\nconst Wrapper = styled.div`\n  background-color: rgb(24, 24, 24);\n  color: white;\n`;\n\nconst Center = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  word-break: break-all;\n`;\n\nconst CardWrapper = styled.span`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n`;\nexport default class Home extends Component {\n  state = {\n    isLogin: false\n  };\n  componentDidMount() {\n    if (sessionStorage.getItem('token')) {\n      this.setState({ isLogin: true });\n    }\n  }\n  render() {\n    const unLoginHome = (\n      <div className=\"Style-center\">\n        <GlobalStyle />\n        <div>\n          <p className=\"Blank-small\" />\n          <p className=\"Text-medium\">쾌적한 컴퓨터실 생활의 중심</p>\n          <p className=\"Text-xlarge Text-bold\">MARKTWO</p>\n          {/* <Center>\n            <img\n              src=\"https://occ-0-988-993.1.nflxso.net/dnm/api/v6/6AYY37jfdO6hpXcMjf9Yu5cnmO0/AAAABSpHMNyvIRy6PolVWkmMg80JA0Kdcldq3vIxohYsRrtBKVZEyJAW6ls4b6EoKP7DzCQ6Fvnq5C694tN5eN06_Hb5gHp2.webp?r=105\"\n              height=\"200px\"\n              alt=\"예시 사진\"\n              className=\"Style-flex-center\"\n            />\n          </Center> */}\n\n          <div className=\"Blank-medium\" />\n          <p className=\"Text-small Text-xlight\">\n            서비스를 이용하기 위해서는 로그인이 필요합니다.\n          </p>\n          <div className=\"Blank-xxsmall\" />\n          <Button\n            variant=\"dark\"\n            href=\"/login\"\n            size=\"lg\"\n            style={{ width: '15rem' }}\n          >\n            로그인\n          </Button>\n        </div>\n        <div></div>\n      </div>\n    );\n\n    const LoginHome = (\n      <Wrapper>\n        <GlobalStyle />\n        <div className=\"Style-center\">\n          <span style={{ backgroundColor: 'white' }}>\n            <p className=\"Blank-small\" />\n            <p className=\"Text-large Text-bold\" style={{ color: 'white' }}>\n              MARKTWO\n            </p>\n            <CardWrapper>\n              <HorizonIndexCard\n                title=\"컴실유틸\"\n                content=\"여러분의 컴퓨터실 생활에 도움이 될 수 있는 유틸리티가 많이 있습니다.\"\n                link=\"/service/comsil\"\n              />\n              <HorizonIndexCard\n                title=\"유틸리티\"\n                content=\"그래픽툴부터 게임, 오피스 등 우리에게 꼭 필요한 프로그램들이 준비되어 있습니다.\"\n                link=\"/service/utility\"\n              />\n            </CardWrapper>\n          </span>\n        </div>\n      </Wrapper>\n    );\n    return <>{this.state.isLogin ? LoginHome : unLoginHome}</>;\n  }\n}\n","import React, { Component, Fragment, KeyboardEvent } from 'react';\nimport { Form, Button, InputGroup, FormControl } from 'react-bootstrap';\n\nimport apiUri from '../api/getApiUri';\nimport styles, { createGlobalStyle } from 'styled-components';\n\nimport '../../styles/index.scss';\nimport publicIp from 'public-ip';\n\nconst GlobalStyle = createGlobalStyle`\n* {\n  margin: 0;\n  padding: 0;\n  background-color:rgb(24,24,24);\n  color:white;\n}\nbody{\n  background-color:rgb(24,24,24);\n}\n.form-control{\n  \n  background-color: rgb(60,60,60) !important;\n  color: white !important;\n  border-color: black !important;\n  :focus{\n    /* background-color:black; */\n  }\n\n}`;\n\nconst BackgroundImg = styles.img`\n\n`;\n\nexport default class Login extends Component {\n  state = {\n    isHinder: true,\n    id: '',\n    password: '',\n    errorMessage: '',\n    isRemember: false\n  };\n\n  handleHinder = () => {\n    this.setState({ isHinder: !this.state.isHinder });\n  };\n\n  handleLogin = async () => {\n    const queryBody: any = {\n      uid: this.state.id,\n      password: this.state.password,\n      publicip: await publicIp.v4()\n    };\n    const queryHeader: any = {\n      'Content-Type': 'application/json'\n    };\n    let errorMessage: string = '';\n\n    await fetch(apiUri + '/auth/', {\n      method: 'POST',\n      body: JSON.stringify(queryBody),\n      headers: queryHeader\n    })\n      .then(res => res.json())\n      .then(data => {\n        if (!data.token) {\n          // loginfail\n          errorMessage = data.message;\n          return;\n        }\n        // loginsuccess\n        sessionStorage.setItem('token', data.token.toString());\n        if (this.state.isRemember) {\n          localStorage.setItem('token', data.token.toString());\n        }\n        window.location.replace('/');\n      })\n      .catch(e => {\n        alert('서버 연결에 실패했습니다 : ' + e);\n        window.location.replace('/');\n      });\n\n    this.setState({ errorMessage: errorMessage });\n  };\n\n  handleChange = (e: any) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n      errorMessage: ''\n    });\n  };\n\n  handleEnterKey = (e: any) => {\n    if (e.keyCode === 13) {\n      this.handleLogin();\n    }\n  };\n\n  handleToggle = () => {\n    this.setState({\n      isRemember: !this.state.isRemember\n    });\n  };\n\n  render() {\n    return (\n      <Fragment>\n        <GlobalStyle />\n        <div className=\"Style-center\">\n          <p className=\"Blank-small\" />\n          <p\n            className=\"Text-bold\"\n            style={{ letterSpacing: '4px', fontSize: '3rem' }}\n          >\n            LOGIN\n          </p>\n          <p className=\"Blank-xsmall\" />\n          <div className=\"Module-input w-auto\">\n            <InputGroup>\n              {/* <InputGroup.Prepend>\n                <InputGroup.Text>ID</InputGroup.Text>\n              </InputGroup.Prepend> */}\n              <FormControl\n                placeholder=\"ID\"\n                type=\"text\"\n                size=\"lg\"\n                value={this.state.id}\n                onChange={this.handleChange}\n                onKeyDown={this.handleEnterKey}\n                name=\"id\"\n              />\n            </InputGroup>\n            <div className=\"Blank-xxsmall\" />\n            <InputGroup>\n              {/* <InputGroup.Prepend>\n                <InputGroup.Text>Password</InputGroup.Text>\n              </InputGroup.Prepend> */}\n              <FormControl\n                placeholder=\"Password\"\n                type={this.state.isHinder ? 'password' : 'text'}\n                size=\"lg\"\n                value={this.state.password}\n                onChange={this.handleChange}\n                onKeyDown={this.handleEnterKey}\n                name=\"password\"\n              />\n              <InputGroup.Append>\n                <Button onClick={this.handleHinder} variant=\"dark\">\n                  {this.state.isHinder ? '보이기' : '숨기기'}\n                </Button>\n              </InputGroup.Append>\n            </InputGroup>\n          </div>\n          <div className=\"Blank-xsmall\" />\n          <Form.Check\n            type=\"switch\"\n            label=\"Remember me\"\n            id=\"remember toggle\"\n            onChange={this.handleToggle}\n          />\n          <p className=\"Blank-xxsmall\" />\n          {this.state.errorMessage ? (\n            <span className=\"Module-errormessage\">\n              {this.state.errorMessage}\n            </span>\n          ) : (\n            <span style={{ color: 'white' }}>&nbsp;</span>\n          )}\n          <div className=\"Blank-xxsmall\" />\n          <Button\n            variant=\"dark\"\n            size=\"lg\"\n            style={{ width: '10rem' }}\n            onClick={this.handleLogin}\n          >\n            로그인\n          </Button>\n          <div className=\"Blank-xsmall\" />\n          <div>\n            또는{' '}\n            <a href=\"/find/password\" style={{ color: 'skyblue' }}>\n              비밀번호 찾기\n            </a>\n          </div>\n        </div>\n      </Fragment>\n    );\n  }\n}\n","import React, { Component, Fragment } from 'react';\nimport styled, { createGlobalStyle } from 'styled-components';\nimport '../../styles/index.scss';\n\nconst GlobalStyle = createGlobalStyle`\n* {\n  margin: 0;\n  padding: 0;\n  background-color:rgb(24,24,24);\n  color:white;\n}\nbody{\n  background-color:rgb(24,24,24);\n}\n.form-control{\n  \n  background-color: rgb(60,60,60) !important;\n  color: white !important;\n  border-color: black !important;\n}`;\nclass Notfound extends Component {\n  render() {\n    return (\n      <>\n        <GlobalStyle />\n        <div className=\"Style-center Style-overflow-hidden\">\n          <div>\n            <p className=\"Module-notfoundmove\" />\n            <p\n              className=\"Module-notfound\"\n              style={{ backgroundColor: '#00000000' }}\n            >\n              &nbsp;404&nbsp;\n            </p>\n          </div>\n          <p className=\"Module-notfoundmove\" />\n          <div />\n          <p className=\"Text-medium\"> Not found</p>\n          <p className=\"Text-small\">\n            <code style={{ color: 'white' }}>무엇을 찾아 헤메던 것일까</code>\n          </p>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Notfound;\n","import React, { Component } from 'react';\nimport { Spinner } from 'react-bootstrap';\nimport { createGlobalStyle } from 'styled-components';\nimport '../../styles/index.scss';\nconst GlobalStyle = createGlobalStyle`\n* {\n  margin: 0;\n  padding: 0;\n  background-color:rgb(24,24,24);\n  color:white !important;\n}\nbody{\n  background-color:rgb(24,24,24);\n}\n.form-control{\n  \n  background-color: rgb(60,60,60) !important;\n  color: white !important;\n  border-color: black !important;\n\n}`;\nclass Logout extends Component {\n  componentDidMount() {\n    localStorage.removeItem('token');\n    sessionStorage.removeItem('token');\n    sessionStorage.removeItem('userid');\n    window.location.replace('/');\n  }\n  render() {\n    return (\n      <>\n        <GlobalStyle />\n        <div className=\"Style-center\">\n          <Spinner\n            style={{ marginTop: '10rem', marginBottom: '3rem' }}\n            animation=\"border\"\n          />\n          <h3>Logging out..</h3>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Logout;\n","import React, { Component } from 'react';\nimport { Button, InputGroup, FormControl } from 'react-bootstrap';\nimport apiUri from '../api/getApiUri';\nimport '../../styles/index.scss';\nimport styles, { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\n* {\n  margin: 0;\n  padding: 0;\n  background-color:rgb(24,24,24);\n  color:white;\n}\nbody{\n  background-color:rgb(24,24,24);\n}\n.form-control{\n  \n  background-color: rgb(60,60,60) !important;\n  color: white !important;\n  border-color: black !important;\n  :focus{\n    /* background-color:black; */\n  }\n\n}`;\nexport default class Register extends Component {\n  state = {\n    id: '',\n    password: '',\n    passwordCheck: '',\n    nickname: '',\n    email: '',\n    isLoading: false,\n    formErrors: { id: '', password: '', nickname: '', email: '' }\n  };\n\n  handleChange = async (e: any) => {\n    const target = e.target;\n    await this.setState({\n      [target.name]: e.target.value\n    });\n    this.verifyForm(target);\n  };\n\n  verifyForm = (target: any) => {\n    switch (target.name) {\n      case 'id':\n        if (target.value.length < 4) {\n          this.setState({\n            formErrors: {\n              ...this.state.formErrors,\n              id: '아이디는 4글자 이상이어야 합니다.'\n            }\n          });\n          //this.state.formErrors.id = 'test';\n          return;\n        }\n        this.setState({\n          formErrors: {\n            ...this.state.formErrors,\n            id: ''\n          }\n        });\n        this.handleOverlap(target);\n        return;\n\n      case 'password':\n      case 'passwordCheck':\n        const passwordRegex = new RegExp(\n          /^((?=\\S*?[a-z])(?=\\S*?[0-9]).{5,})\\S$/\n        );\n        if (!passwordRegex.test(target.value)) {\n          this.setState({\n            formErrors: {\n              ...this.state.formErrors,\n              password: '영문과 숫자를 포함한 6글자 이상이어야 합니다.'\n            }\n          });\n          return;\n        }\n        if (this.state.password !== this.state.passwordCheck) {\n          this.setState({\n            formErrors: {\n              ...this.state.formErrors,\n              password: '비밀번호가 일치하지 않습니다.'\n            }\n          });\n          return;\n        }\n        this.setState({\n          formErrors: {\n            ...this.state.formErrors,\n            password: ''\n          }\n        });\n        return;\n      case 'nickname':\n        this.handleOverlap(target);\n        break;\n      case 'email':\n        const emailRegex = new RegExp(\n          /^(?:[a-zA-Z0-9])([-_0-9a-zA-Z]+(\\.[-_0-9a-zA-Z]+)*|^\\\"([\\001-\\010\\013\\014\\016-\\037!#-\\[\\]-\\177]|\\\\[\\001-011\\013\\014\\016-\\177])*\\\")@(?:[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?\\.)+[a-zA-Z]{2,6}\\.?$/\n        );\n        if (!emailRegex.test(this.state.email)) {\n          this.setState({\n            formErrors: {\n              ...this.state.formErrors,\n              email: '정확한 이메일을 입력해주세요.'\n            }\n          });\n          break;\n        }\n        this.setState({\n          formErrors: {\n            ...this.state.formErrors,\n            email: ''\n          }\n        });\n        this.handleOverlap(target);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  handleRegister = () => {\n    this.setState({ isLoading: true });\n    if (\n      this.state.formErrors.email ||\n      this.state.formErrors.id ||\n      this.state.formErrors.nickname ||\n      this.state.formErrors.password\n    ) {\n      alert('잘못 입력된 정보를 다시 확인하세요.');\n      this.setState({ isLoading: false });\n      return;\n    }\n    if (\n      !this.state.email ||\n      !this.state.id ||\n      !this.state.nickname ||\n      !this.state.password\n    ) {\n      alert('비어있는 정보가 있습니다.');\n      this.setState({ isLoading: false });\n      return;\n    }\n    const queryBody: any = {\n      uid: this.state.id,\n      password: this.state.password,\n      nickname: this.state.nickname,\n      email: this.state.email\n    };\n    const queryHeader: any = {\n      'Content-Type': 'application/json'\n    };\n    fetch(apiUri + '/user/', {\n      method: 'POST',\n      body: JSON.stringify(queryBody),\n      headers: queryHeader\n    })\n      .then(res => res.json())\n      .then(data => {\n        switch (data.status) {\n          case 400:\n            alert('Error 400 : ' + data.message);\n            this.setState({ isLoading: false });\n            return;\n          case 422:\n            alert('Error 422 : ' + data.message);\n            this.setState({\n              isLoading: false,\n              formErrors: {\n                ...this.state.formErrors,\n                id: '다른 아이디로 시도해주세요.'\n              },\n              id: ''\n            });\n            return;\n          case 500:\n            alert('Error 500 : ' + data.message);\n            this.setState({ isLoading: false });\n            return;\n        }\n        if (data.state === true) {\n          alert('회원가입에 성공했습니다.');\n          window.location.replace('/login');\n          return;\n        }\n      });\n  };\n\n  handleOverlap = async (target: any) => {\n    const queryBody: any = {\n      type: target.name,\n      content: target.value\n    };\n    const queryHeader: any = {\n      'Content-Type': 'application/json'\n    };\n\n    fetch(apiUri + '/user/overlap/', {\n      method: 'POST',\n      body: JSON.stringify(queryBody),\n      headers: queryHeader\n    })\n      .then(res => res.json())\n      .then(data => {\n        if (data.status === 400) {\n          alert('Client Error : ' + data.message);\n        }\n        if (data.overlap === true) {\n          this.setState({\n            formErrors: {\n              ...this.state.formErrors,\n              [target.name]: '이미 사용중입니다.'\n            }\n          });\n          return;\n        }\n        this.setState({\n          formErrors: {\n            ...this.state.formErrors,\n            [target.name]: ''\n          }\n        });\n        return;\n      })\n      .catch(e => {\n        alert('서버 연결에 실패했습니다 : ' + e);\n        window.location.replace('/');\n      });\n    return;\n  };\n\n  render() {\n    return (\n      <>\n        <div className=\"Style-center\">\n          <GlobalStyle />\n          <div className=\"Blank-small\" />\n          <p\n            className=\"Text-bold\"\n            style={{ letterSpacing: '4px', fontSize: '3rem' }}\n          >\n            REGISTER\n          </p>\n          <div className=\"Blank-xsmall\" />\n          <div className=\"Module-input\">\n            <FormControl\n              placeholder=\"ID\"\n              type=\"id\"\n              size=\"lg\"\n              value={this.state.id}\n              onChange={this.handleChange}\n              name=\"id\"\n            />\n            <div className=\"Blank-xxsmall\" />\n            {this.state.formErrors.id ? (\n              <span className=\"Module-errormessage\">\n                {this.state.formErrors.id}\n              </span>\n            ) : (\n              <span style={{ color: 'black' }}>&nbsp;</span>\n            )}\n            <div className=\"Blank-xxsmall\" />\n            <FormControl\n              placeholder=\"Password\"\n              type=\"password\"\n              size=\"lg\"\n              value={this.state.password}\n              onChange={this.handleChange}\n              name=\"password\"\n            />\n            <div className=\"Blank-xxsmall\" />\n            <FormControl\n              placeholder=\"Verify password\"\n              type=\"password\"\n              size=\"lg\"\n              value={this.state.passwordCheck}\n              onChange={this.handleChange}\n              name=\"passwordCheck\"\n            />\n            <div className=\"Blank-xxsmall\" />\n            {this.state.formErrors.password ? (\n              <span className=\"Module-errormessage\">\n                {this.state.formErrors.password}\n              </span>\n            ) : (\n              <span style={{ color: 'white' }}>&nbsp;</span>\n            )}\n            <div className=\"Blank-xxsmall\" />\n            <FormControl\n              placeholder=\"Nickname\"\n              type=\"name\"\n              size=\"lg\"\n              value={this.state.nickname}\n              onChange={this.handleChange}\n              name=\"nickname\"\n            />\n            <div className=\"Blank-xxsmall\" />\n            {this.state.formErrors.nickname ? (\n              <span className=\"Module-errormessage\">\n                {this.state.formErrors.nickname}\n              </span>\n            ) : (\n              <span style={{ color: 'white' }}>&nbsp;</span>\n            )}\n            <div className=\"Blank-xxsmall\" />\n            <FormControl\n              placeholder=\"Email\"\n              type=\"email\"\n              size=\"lg\"\n              value={this.state.email}\n              onChange={this.handleChange}\n              name=\"email\"\n            />\n            <div className=\"Blank-xxsmall\" />\n            {this.state.formErrors.email ? (\n              <span className=\"Module-errormessage\">\n                {this.state.formErrors.email}\n              </span>\n            ) : (\n              <span style={{ color: 'white' }}>&nbsp;</span>\n            )}\n            <div className=\"Blank-xxsmall\" />\n            <Button\n              size=\"lg\"\n              variant=\"dark\"\n              onClick={this.handleRegister}\n              disabled={this.state.isLoading}\n            >\n              {!this.state.isLoading ? '회원 가입' : 'Loading...'}\n            </Button>\n            <div className=\"Blank-small\" />\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport '../../styles/index.scss';\nimport apiUri from '../api/getApiUri';\nimport styled, { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\nbody {\n  /* margin: 0;\n  padding: 0; */\n  background-color:rgb(24,24,24);\n  color:white;\n  justify-content:center;\n \n}\n.form-control{\n  background-color: rgb(60,60,60) !important;\n  color: white !important;\n  border-color: black !important;\n}`;\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  word-break: break-all;\n`;\n\nexport default class Mypage extends Component {\n  render() {\n    return (\n      <>\n        <GlobalStyle />\n        <div className=\"Blank-small\" />\n        <Wrapper>\n          <p\n            style={{ fontSize: '3rem', fontWeight: 900, letterSpacing: '4px' }}\n          >\n            MY PAGE\n          </p>\n        </Wrapper>\n      </>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport styled, { createGlobalStyle } from 'styled-components';\nimport '../../styles/index.scss';\nconst GlobalStyle = createGlobalStyle`\n* {\n  margin: 0;\n  padding: 0;\n  background-color:rgb(24,24,24);\n  color:white !important;\n}\n.form-control{\n  \n  background-color: rgb(60,60,60) !important;\n  color: white !important;\n  border-color: black !important;\n\n}`;\nexport default class FindPassword extends Component {\n  render() {\n    return (\n      <>\n        <GlobalStyle />\n        <p className=\"Text-medium Text-bold\">Text</p>\n      </>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport styled, { createGlobalStyle } from 'styled-components';\nimport '../../styles/tailwind.css';\n\nconst GlobalStyle = createGlobalStyle`\n* {\n  margin: 0;\n  padding: 0;\n  background-color:rgb(24,24,24);\n  color:white !important;\n}\n.form-control{\n  \n  background-color: rgb(60,60,60) !important;\n  color: white !important;\n  border-color: black !important;\n\n}`;\nexport default class UploadProducts extends Component {\n  render() {\n    return (\n      <>\n        <GlobalStyle />\n      </>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport '../../../styles/tailwind.css';\nimport styled, { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\n* {\n  margin: 0;\n  padding: 0;\n  background-color:rgb(24,24,24);\n  color: white !important ;\n}\n.form-control{\n  \n  background-color: rgb(60,60,60) !important;\n  color: white !important;\n  border-color: black !important;\n\n}`;\nexport default class Product extends Component<any> {\n  constructor(props: any) {\n    super(props);\n  }\n  state = {\n    img: this.props.img,\n    title: this.props.title,\n    content: this.props.content,\n    link: this.props.link,\n    maclink: this.props.maclink\n  };\n  handleOpenLink = () => {\n    window.location.replace(this.state.link);\n  };\n  handleOpenMacLink = () => {\n    window.location.replace(this.state.maclink);\n  };\n  render() {\n    const windowLink = (\n      <button\n        className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-full\"\n        onClick={this.handleOpenLink}\n      >\n        Download\n      </button>\n    );\n\n    const windowMacLink = (\n      <>\n        <button\n          className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-full\"\n          onClick={this.handleOpenLink}\n          style={{ marginRight: '1rem' }}\n        >\n          Windows\n        </button>\n        <button\n          className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-full\"\n          onClick={this.handleOpenMacLink}\n        >\n          Mac\n        </button>\n      </>\n    );\n    return (\n      <>\n        <GlobalStyle />\n        <div\n          className=\"max-w-sm rounded overflow-hidden shadow-lg\"\n          style={{ margin: '1rem' }}\n        >\n          <img className=\"w-full\" src={this.state.img} alt=\"Product Photo\" />\n          <div className=\"px-6 py-4\">\n            <div className=\"font-bold text-xl mb-2\">{this.state.title}</div>\n            <p className=\"text-700 text-base\">{this.state.content}</p>\n          </div>\n          <div\n            className=\"px-6 py-4\"\n            style={{ display: 'flex', justifyContent: 'center' }}\n          >\n            {!this.state.maclink ? windowLink : windowMacLink}\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport Product from './Product';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n`;\n\nexport default class ProductList extends Component<any> {\n  static defaultProps = {\n    data: []\n  };\n\n  render() {\n    let data;\n    let list;\n    try {\n      data = JSON.parse(this.props.data);\n      list = data.map((info: any) => (\n        <Product\n          key={info.id}\n          title={info.title}\n          img={info.img}\n          content={info.content}\n          link={info.link}\n          maclink={info.maclink}\n        />\n      ));\n    } catch (e) {\n      console.log(e);\n      list = (\n        <Product\n          key=\"0\"\n          img=\"https://occ-0-988-993.1.nflxso.net/dnm/api/v6/6AYY37jfdO6hpXcMjf9Yu5cnmO0/AAAABSpHMNyvIRy6PolVWkmMg80JA0Kdcldq3vIxohYsRrtBKVZEyJAW6ls4b6EoKP7DzCQ6Fvnq5C694tN5eN06_Hb5gHp2.webp?r=105\"\n          content=\"표시할 데이터가 없습니다.\"\n          title=\"데이터가 없습니다.\"\n          link=\"/\"\n        />\n      );\n    }\n\n    return <Wrapper>{list}</Wrapper>;\n  }\n}\n","import React, { Component } from 'react';\nimport styled, { createGlobalStyle } from 'styled-components';\nimport Product from './components/Product';\nimport apiUri from '../api/getApiUri';\nimport ProductInfoList from './components/ProductInfoList';\nimport '../../styles/index.scss';\nconst GlobalStyle = createGlobalStyle`\n* {\n  margin: 0;\n  padding: 0;\n  color : rgb(24,24,24);\n}`;\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n`;\nexport default class Comsil extends Component {\n  state = {\n    data: null\n  };\n\n  handleDataRecieve = async () => {\n    // const queryHeader: any = {\n    //   'Content-Type': 'application/json'\n    // };\n    await fetch(apiUri + '/data/comsil', {\n      method: 'GET'\n      //   headers: queryHeader\n    })\n      .then(res => res.json())\n      .then(data => {\n        this.setState({\n          data: JSON.stringify(data.result)\n        });\n      })\n      .catch(e => {\n        alert(e);\n      });\n  };\n\n  componentWillMount() {\n    this.handleDataRecieve();\n  }\n  render() {\n    return (\n      <>\n        <GlobalStyle />\n        <div className=\"Blank-small\" />\n        <Wrapper>\n          <div className=\"Blank-small\" />\n          <p className=\"Text-medium Text-bold\">컴실유틸</p>\n        </Wrapper>\n        <Wrapper>\n          <ProductInfoList data={this.state.data} />\n        </Wrapper>\n      </>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport styled, { createGlobalStyle } from 'styled-components';\nimport ProductInfoList from './components/ProductInfoList';\nimport apiUri from '../api/getApiUri';\n\nconst GlobalStyle = createGlobalStyle`\n* {\n  margin: 0;\n  padding: 0;\n  background-color:rgb(24,24,24);\n  color:white;\n}\n.form-control{\n  \n  background-color: rgb(60,60,60) !important;\n  color: white !important;\n  border-color: black !important;\n  :focus{\n    /* background-color:black; */\n  }\n\n}`;\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n`;\n\nexport default class Utilty extends Component {\n  state = { data: null };\n\n  handleDataRecieve = async () => {\n    // const queryHeader: any = {\n    //   'Content-Type': 'application/json'\n    // };\n    await fetch(apiUri + '/data/utility', {\n      method: 'GET'\n      //   headers: queryHeader\n    })\n      .then(res => res.json())\n      .then(data => {\n        this.setState({\n          data: JSON.stringify(data.result)\n        });\n      })\n      .catch(e => {\n        alert(e);\n      });\n  };\n  componentWillMount() {\n    this.handleDataRecieve();\n  }\n  render() {\n    return (\n      <>\n        <GlobalStyle />\n        <div className=\"Blank-small\" />\n        <Wrapper>\n          <div className=\"Blank-small\" />\n          <p className=\"Text-medium Text-bold\">유틸리티</p>\n        </Wrapper>\n        <Wrapper>\n          <ProductInfoList data={this.state.data} />\n        </Wrapper>\n      </>\n    );\n  }\n}\n","import React from 'react';\n\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Headroom from 'react-headroom';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './styles/index.scss';\n\nimport Header from './routes/components/header';\nimport Home from './routes/main/home';\nimport Login from './routes/main/login';\nimport Notfound from './routes/util/notfound';\nimport Logout from './routes/util/logout';\nimport Register from './routes/main/register';\nimport Mypage from './routes/main/mypage';\nimport FindPassword from './routes/util/FindPassword';\nimport UploadProducts from './routes/util/UploadProducts';\n\nimport Comsil from './routes/service/Comsil';\nimport Utility from './routes/service/Utility';\n\nclass App extends React.Component {\n  constructor(props: any) {\n    super(props);\n    document.title = '반성하세요 - dodol:i';\n  }\n  render() {\n    return (\n      <div>\n        <Headroom>\n          <Header />\n        </Headroom>\n        <Router>\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path=\"/logout\" component={Logout} />\n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/mypage\" component={Mypage} />\n\n            <Route exact path=\"/service/comsil\" component={Comsil} />\n            <Route exact path=\"/service/utility\" component={Utility} />\n\n            <Route exact path=\"/find/password\" component={FindPassword} />\n\n            <Route exact path=\"/admin/upload\" component={UploadProducts} />\n\n            <Route component={Notfound} />\n          </Switch>\n          <div className=\"App\"></div>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nrequire('dotenv').config();\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}