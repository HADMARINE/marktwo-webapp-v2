{"version":3,"sources":["routes/api/getApiUri.ts","routes/components/header.tsx","routes/components/HorizonIndexCard.tsx","routes/main/home.tsx","routes/main/login.tsx","routes/util/notfound.tsx","routes/util/logout.tsx","routes/main/register.tsx","routes/main/mypage.tsx","routes/util/FindPassword.tsx","routes/util/UploadProducts.tsx","routes/etc/Terms.tsx","routes/service/components/Product.tsx","routes/service/components/ProductInfoList.tsx","routes/service/Comsil.tsx","routes/service/Utility.tsx","routes/service/Graphics.tsx","routes/service/Game.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["baseURL","Header","props","state","isLogin","checkIsLogin","a","checkLocalToken","sessionStorage","getItem","setState","queryHeader","publicIp","v4","queryBody","publicip","fetch","apiUri","method","body","JSON","stringify","headers","then","res","json","data","status","removeItem","localStorage","alert","message","window","location","replace","userid","setItem","catch","token","document","title","this","loginLoginBar","className","href","unloginLoginBar","style","fontSize","marginTop","Component","GlobalStyle","createGlobalStyle","Wrapper","styled","span","HorizonIndexCard","img","content","link","handleOpenLink","WhiteCard","onClick","margin","backgroundColor","div","CardWrapper","Home","isAlertVisible","MainAlert","Alert","variant","onClose","dismissible","Heading","color","unLoginHome","Button","size","width","LoginHome","Login","styles","isHinder","id","password","errorMessage","isRemember","handleHinder","handleLogin","uid","toString","e","handleChange","target","name","value","handleEnterKey","keyCode","handleToggle","letterSpacing","InputGroup","FormControl","placeholder","type","onChange","onKeyDown","Append","Form","Check","label","Notfound","Logout","Spinner","marginBottom","animation","Register","passwordCheck","email","isLoading","formErrors","verifyForm","length","handleOverlap","RegExp","test","handleRegister","overlap","disabled","Mypage","login","handleFetchUserData","error","handleTokenVerifyFail","fontWeight","Prepend","Text","FindPassword","UploadProducts","Terms","Product","maclink","handleOpenMacLink","windowLink","windowMacLink","marginRight","src","alt","display","justifyContent","ProductList","list","parse","map","info","key","console","log","defaultProps","Comsil","handleDataRecieve","result","Utilty","App","exact","path","component","Utility","Graphics","Game","React","Boolean","hostname","match","require","config","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.461c1865.chunk.js","sourcesContent":["export const baseURL =\n  process.env.NODE_ENV === 'development'\n    ? 'http://localhost:4000'\n    : 'https://api.marktwo.net';\n\nexport default baseURL;\n","import React, { Component } from 'react';\nimport apiUri from '../api/getApiUri';\n\nimport publicIp from 'public-ip';\nimport Alert from './Alert';\n\nimport '../../styles/index.scss';\n\nclass Header extends Component {\n  constructor(props: any) {\n    super(props);\n    document.title = 'MARKTWO';\n  }\n\n  state = {\n    isLogin: false\n  };\n\n  checkIsLogin = async () => {\n    await this.checkLocalToken();\n    if (!sessionStorage.getItem('token')) {\n      this.setState({ isLogin: false });\n      return;\n    }\n\n    const queryHeader: any = {\n      'Content-Type': 'application/json',\n      'x-access-token': sessionStorage.getItem('token') || 'null'\n    };\n\n    const queryBody: any = {\n      publicip: await publicIp.v4()\n    };\n\n    await fetch(apiUri + '/auth/verify', {\n      method: 'POST',\n      body: JSON.stringify(queryBody),\n      headers: queryHeader\n    })\n      .then(res => res.json())\n      .then(data => {\n        if (data.status === 403) {\n          sessionStorage.removeItem('token');\n          sessionStorage.removeItem('userid');\n          localStorage.removeItem('token');\n          alert('Error ' + data.status + ' : ' + data.message);\n          window.location.replace('/');\n        }\n        if (!data.userid) {\n          localStorage.removeItem('token');\n          sessionStorage.removeItem('userid');\n          this.setState({ isLogin: false });\n          return;\n        }\n        this.setState({ isLogin: true });\n        sessionStorage.setItem('userid', data.userid);\n      })\n      .catch();\n  };\n\n  checkLocalToken = async () => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      sessionStorage.setItem('token', token);\n    }\n  };\n\n  async componentWillMount() {\n    await this.checkIsLogin();\n  }\n\n  render() {\n    const loginLoginBar = (\n      <span>\n        <a className=\"Module-loginbutton\" href=\"/register\">\n          REGISTER\n        </a>\n        <a className=\"Module-loginbutton\" href=\"/login\">\n          LOGIN\n        </a>\n      </span>\n    );\n\n    const unloginLoginBar = (\n      <span>\n        <a className=\"Module-loginbutton\" href=\"/logout\">\n          LOGOUT\n        </a>\n        <a className=\"Module-loginbutton\" href=\"/mypage\">\n          MYPAGE\n        </a>\n      </span>\n    );\n\n    return (\n      <>\n        <div className=\"Background-header\">\n          <div>\n            <a\n              className=\"Module-mainlogo\"\n              style={{ fontSize: '2rem', marginTop: '0rem' }}\n              href=\"/\"\n            >\n              MARKTWO\n            </a>\n\n            {!this.state.isLogin ? loginLoginBar : unloginLoginBar}\n          </div>\n          <br />\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from 'react';\nimport '../../styles/tailwind.css';\nimport styled, { createGlobalStyle } from 'styled-components';\nimport './HorizonIndexCard.scss';\nconst GlobalStyle = createGlobalStyle`\n* {\n\n}\n.form-control{\n  \n  background-color: rgb(60,60,60) !important;\n  color: white !important;\n  border-color: black !important;\n\n}`;\n\nconst Wrapper = styled.span`\n  color: white;\n  background-color: rgb(24, 24, 24);\n`;\n\nexport default class HorizonIndexCard extends Component<any> {\n  constructor(props: any) {\n    super(props);\n  }\n  state = {\n    img: this.props.img,\n    title: this.props.title,\n    content: this.props.content,\n    link: this.props.link\n  };\n  handleOpenLink = () => {\n    window.location.replace(this.state.link);\n  };\n  render() {\n    const WhiteCard = (\n      <div\n        onClick={this.handleOpenLink}\n        className=\"max-w-sm rounded overflow-hidden shadow-lg Module-background\"\n        style={{ margin: '1rem', backgroundColor: 'rgb(60,60,60)' }}\n      >\n        <div onClick={this.handleOpenLink} className=\"px-6 py-4\">\n          <div className=\"font-bold text-xl mb-2\" style={\n                {fontSize :'4.3rem'}\n              }>\n            {this.state.title}\n          </div>\n          <p className=\"text-700 text-base\" onClick={this.handleOpenLink}>\n            {this.state.content}\n          </p>\n        </div>\n      </div>\n    );\n    return (\n      <>\n        <GlobalStyle />\n        <Wrapper>{WhiteCard}</Wrapper>\n      </>\n    );\n  }\n}\n","import React, { Component, Fragment } from 'react';\nimport Bootstrap, { Button,Alert } from 'react-bootstrap';\nimport HorizonIndexCard from '../components/HorizonIndexCard';\n\nimport styled, { createGlobalStyle } from 'styled-components';\nimport '../../styles/index.scss';\n\nconst GlobalStyle = createGlobalStyle`\nbody {\n  /* margin: 0;\n  padding: 0; */\n  background-color:rgb(24,24,24);\n  color:white;\n  justify-content:center;\n \n}\n.form-control{\n  background-color: rgb(60,60,60) !important;\n  color: white !important;\n  border-color: black !important;\n}`;\n\nconst Wrapper = styled.div`\n  background-color: rgb(24, 24, 24);\n  color: white;\n`;\n\nconst Center = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  word-break: break-all;\n`;\n\nconst CardWrapper = styled.span`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n`;\n\n\n\nexport default class Home extends Component {\n  state = {\n    isLogin: false,\n    isAlertVisible:true\n  };\n  componentDidMount() {\n    if (sessionStorage.getItem('token')) {\n      this.setState({ isLogin: true });\n    }\n  }\n  \n  render() {\n    const MainAlert = (\n      <Alert variant=\"dark\" onClose={ () => this.setState({isAlertVisible: false})}  dismissible>\n        <Alert.Heading>감사합니다!</Alert.Heading>\n        <p>\n          여러분의 성원에 힘입어 MARKTWO V2 를 발표하게 되었습니다.<br/>\n          모든 기능이 업데이트되어 돌아왔으며 지속적으로 업데이트 될 예정입니다.<br/>\n          모든 사람이 제한없는 컴퓨터 라이프를 누릴 수 있도록, MARKTWO는 지속적으로 운영될 것입니다.<br/>\n          후원은 \n          <a href=\"mailto:joonlee031@outlook.com\" style={{color:'skyblue'}}>이메일</a> 로 문의바랍니다. 감사합니다\n        </p>\n      </Alert>\n    )\n    const unLoginHome = (\n      <div className=\"Style-center\">\n        <GlobalStyle />\n        <div>\n          <p className=\"Blank-small\" />\n          <p className=\"Text-medium\">쾌적한 컴퓨터실 생활의 중심</p>\n          <p className=\"Text-xlarge Text-bold\">MARKTWO</p>\n          {/* <Center>\n            <img\n              src=\"https://occ-0-988-993.1.nflxso.net/dnm/api/v6/6AYY37jfdO6hpXcMjf9Yu5cnmO0/AAAABSpHMNyvIRy6PolVWkmMg80JA0Kdcldq3vIxohYsRrtBKVZEyJAW6ls4b6EoKP7DzCQ6Fvnq5C694tN5eN06_Hb5gHp2.webp?r=105\"\n              height=\"200px\"\n              alt=\"예시 사진\"\n              className=\"Style-flex-center\"\n            />\n          </Center> */}\n\n          <div className=\"Blank-medium\" />\n          <p className=\"Text-small Text-xlight\">\n            서비스를 이용하기 위해서는 로그인이 필요합니다.\n          </p>\n          <div className=\"Blank-xxsmall\" />\n          <Button\n            variant=\"dark\"\n            href=\"/login\"\n            size=\"lg\"\n            style={{ width: '15rem' }}\n          >\n            로그인\n          </Button>\n        </div>\n        <div></div>\n      </div>\n    );\n\n    const LoginHome = (\n      <Wrapper>\n        <GlobalStyle />\n        <div className=\"Style-center\">\n          <span style={{ backgroundColor: 'white' }}>\n            <p className=\"Blank-xsmall\" />\n\n            {(this.state.isAlertVisible) ? MainAlert : <></>}\n            <CardWrapper>\n              <HorizonIndexCard\n                title=\"컴실유틸\"\n                content=\"여러분의 컴퓨터실 생활에 도움이 될 수 있는 유틸리티가 많이 있습니다.\"\n                link=\"/service/comsil\"\n              />\n              <HorizonIndexCard\n                title=\"유틸리티\"\n                content=\"그래픽툴부터 게임, 오피스 등 우리에게 꼭 필요한 프로그램들이 준비되어 있습니다.\"\n                link=\"/service/utility\"\n              />\n              <HorizonIndexCard\n              title=\"그래픽 툴\"\n              content=\"디자이너를 위한 그래픽 툴이 준비되어 있습니다. 맥과 윈도우 가리지 않고요.\"\n              link='/service/graphics'\n              />\n              <HorizonIndexCard\n              title='게임'\n              content='재밌는 게임들이 준비되어 있습니다. 다운로드만 하세요.'\n              link='/service/game'\n              />\n            </CardWrapper>\n          </span>\n        </div>\n      </Wrapper>\n    );\n    return <>{this.state.isLogin ? LoginHome : unLoginHome}</>;\n  }\n}\n","import React, { Component, Fragment, KeyboardEvent } from 'react';\nimport { Form, Button, InputGroup, FormControl } from 'react-bootstrap';\n\nimport apiUri from '../api/getApiUri';\nimport styles, { createGlobalStyle } from 'styled-components';\n\nimport '../../styles/index.scss';\nimport publicIp from 'public-ip';\n\nconst GlobalStyle = createGlobalStyle`\n* {\n  margin: 0;\n  padding: 0;\n  background-color:rgb(24,24,24);\n  color:white;\n}\nbody{\n  background-color:rgb(24,24,24);\n}\n.form-control{\n  \n  background-color: rgb(60,60,60) !important;\n  color: white !important;\n  border-color: black !important;\n  :focus{\n    /* background-color:black; */\n  }\n\n}`;\n\nconst BackgroundImg = styles.img`\n\n`;\n\nexport default class Login extends Component {\n  state = {\n    isHinder: true,\n    id: '',\n    password: '',\n    errorMessage: '',\n    isRemember: false\n  };\n\n  handleHinder = () => {\n    this.setState({ isHinder: !this.state.isHinder });\n  };\n\n  handleLogin = async () => {\n    const queryBody: any = {\n      uid: this.state.id,\n      password: this.state.password,\n      publicip: await publicIp.v4()\n    };\n    const queryHeader: any = {\n      'Content-Type': 'application/json'\n    };\n    let errorMessage: string = '';\n\n    await fetch(apiUri + '/auth/', {\n      method: 'POST',\n      body: JSON.stringify(queryBody),\n      headers: queryHeader\n    })\n      .then(res => res.json())\n      .then(data => {\n        if (!data.token) {\n          // loginfail\n          errorMessage = data.message;\n          return;\n        }\n        // loginsuccess\n        sessionStorage.setItem('token', data.token.toString());\n        if (this.state.isRemember) {\n          localStorage.setItem('token', data.token.toString());\n        }\n        window.location.replace('/');\n      })\n      .catch(e => {\n        alert('서버 연결에 실패했습니다 : ' + e);\n        window.location.replace('/');\n      });\n\n    this.setState({ errorMessage: errorMessage });\n  };\n\n  handleChange = (e: any) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n      errorMessage: ''\n    });\n  };\n\n  handleEnterKey = (e: any) => {\n    if (e.keyCode === 13) {\n      this.handleLogin();\n    }\n  };\n\n  handleToggle = () => {\n    this.setState({\n      isRemember: !this.state.isRemember\n    });\n  };\n\n  render() {\n    return (\n      <Fragment>\n        <GlobalStyle />\n        <div className=\"Style-center\">\n          <p className=\"Blank-small\" />\n          <p\n            className=\"Text-bold\"\n            style={{ letterSpacing: '4px', fontSize: '3rem' }}\n          >\n            LOGIN\n          </p>\n          <p className=\"Blank-xsmall\" />\n          <div className=\"Module-input w-auto\">\n            <InputGroup>\n              {/* <InputGroup.Prepend>\n                <InputGroup.Text>ID</InputGroup.Text>\n              </InputGroup.Prepend> */}\n              <FormControl\n                placeholder=\"ID\"\n                type=\"text\"\n                size=\"lg\"\n                value={this.state.id}\n                onChange={this.handleChange}\n                onKeyDown={this.handleEnterKey}\n                name=\"id\"\n              />\n            </InputGroup>\n            <div className=\"Blank-xxsmall\" />\n            <InputGroup>\n              {/* <InputGroup.Prepend>\n                <InputGroup.Text>Password</InputGroup.Text>\n              </InputGroup.Prepend> */}\n              <FormControl\n                placeholder=\"Password\"\n                type={this.state.isHinder ? 'password' : 'text'}\n                size=\"lg\"\n                value={this.state.password}\n                onChange={this.handleChange}\n                onKeyDown={this.handleEnterKey}\n                name=\"password\"\n              />\n              <InputGroup.Append>\n                <Button onClick={this.handleHinder} variant=\"dark\">\n                  {this.state.isHinder ? '보이기' : '숨기기'}\n                </Button>\n              </InputGroup.Append>\n            </InputGroup>\n          </div>\n          <div className=\"Blank-xsmall\" />\n          <Form.Check\n            type=\"switch\"\n            label=\"Remember me\"\n            id=\"remember toggle\"\n            onChange={this.handleToggle}\n          />\n          <p className=\"Blank-xxsmall\" />\n          {this.state.errorMessage ? (\n            <span className=\"Module-errormessage\">\n              {this.state.errorMessage}\n            </span>\n          ) : (\n            <span style={{ color: 'white' }}>&nbsp;</span>\n          )}\n          <div className=\"Blank-xxsmall\" />\n          <Button\n            variant=\"dark\"\n            size=\"lg\"\n            style={{ width: '10rem' }}\n            onClick={this.handleLogin}\n          >\n            로그인\n          </Button>\n          <div className=\"Blank-xsmall\" />\n          <div>\n            또는{' '}\n            <a href=\"/find/password\" style={{ color: 'skyblue' }}>\n              비밀번호 찾기\n            </a>\n          </div>\n        </div>\n      </Fragment>\n    );\n  }\n}\n","import React, { Component, Fragment } from 'react';\nimport styled, { createGlobalStyle } from 'styled-components';\nimport '../../styles/index.scss';\n\nconst GlobalStyle = createGlobalStyle`\n* {\n  margin: 0;\n  padding: 0;\n  background-color:rgb(24,24,24);\n  color:white;\n}\nbody{\n  background-color:rgb(24,24,24);\n}\n.form-control{\n  \n  background-color: rgb(60,60,60) !important;\n  color: white !important;\n  border-color: black !important;\n}`;\nclass Notfound extends Component {\n  render() {\n    return (\n      <>\n        <GlobalStyle />\n        <div className=\"Style-center Style-overflow-hidden\">\n          <div>\n            <p className=\"Module-notfoundmove\" />\n            <p\n              className=\"Module-notfound\"\n              style={{ backgroundColor: '#00000000' }}\n            >\n              &nbsp;404&nbsp;\n            </p>\n          </div>\n          <p className=\"Module-notfoundmove\" />\n          <div />\n          <p className=\"Text-medium\"> Not found</p>\n          <p className=\"Text-small\">\n            <code style={{ color: 'white' }}>무엇을 찾아 헤메던 것일까</code>\n          </p>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Notfound;\n","import React, { Component } from 'react';\nimport { Spinner } from 'react-bootstrap';\nimport { createGlobalStyle } from 'styled-components';\nimport '../../styles/index.scss';\nconst GlobalStyle = createGlobalStyle`\n* {\n  margin: 0;\n  padding: 0;\n  background-color:rgb(24,24,24);\n  color:white !important;\n}\nbody{\n  background-color:rgb(24,24,24);\n}\n.form-control{\n  \n  background-color: rgb(60,60,60) !important;\n  color: white !important;\n  border-color: black !important;\n\n}`;\nclass Logout extends Component {\n  componentDidMount() {\n    localStorage.removeItem('token');\n    sessionStorage.removeItem('token');\n    sessionStorage.removeItem('userid');\n    window.location.replace('/');\n  }\n  render() {\n    return (\n      <>\n        <GlobalStyle />\n        <div className=\"Style-center\">\n          <Spinner\n            style={{ marginTop: '10rem', marginBottom: '3rem' }}\n            animation=\"border\"\n          />\n          <h3>Logging out..</h3>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Logout;\n","import React, { Component } from 'react';\nimport { Button, InputGroup, FormControl } from 'react-bootstrap';\nimport apiUri from '../api/getApiUri';\nimport '../../styles/index.scss';\nimport styles, { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\n* {\n  margin: 0;\n  padding: 0;\n  background-color:rgb(24,24,24);\n  color:white;\n}\nbody{\n  background-color:rgb(24,24,24);\n}\n.form-control{\n  \n  background-color: rgb(60,60,60) !important;\n  color: white !important;\n  border-color: black !important;\n  :focus{\n    /* background-color:black; */\n  }\n\n}`;\nexport default class Register extends Component {\n  state = {\n    id: '',\n    password: '',\n    passwordCheck: '',\n    name: '',\n    email: '',\n    isLoading: false,\n    formErrors: { id: '', password: '', name: '', email: '' }\n  };\n\n  handleChange = async (e: any) => {\n    const target = e.target;\n    await this.setState({\n      [target.name]: e.target.value\n    });\n    this.verifyForm(target);\n  };\n\n  verifyForm = (target: any) => {\n    switch (target.name) {\n      case 'id':\n        if (target.value.length < 4) {\n          this.setState({\n            formErrors: {\n              ...this.state.formErrors,\n              id: '아이디는 4글자 이상이어야 합니다.'\n            }\n          });\n          //this.state.formErrors.id = 'test';\n          return;\n        }\n        this.setState({\n          formErrors: {\n            ...this.state.formErrors,\n            id: ''\n          }\n        });\n        this.handleOverlap(target);\n        return;\n\n      case 'password':\n      case 'passwordCheck':\n        const passwordRegex = new RegExp(\n          /^((?=\\S*?[a-z])(?=\\S*?[0-9]).{5,})\\S$/\n        );\n        if (!passwordRegex.test(target.value)) {\n          this.setState({\n            formErrors: {\n              ...this.state.formErrors,\n              password: '영문과 숫자를 포함한 6글자 이상이어야 합니다.'\n            }\n          });\n          return;\n        }\n        if (this.state.password !== this.state.passwordCheck) {\n          this.setState({\n            formErrors: {\n              ...this.state.formErrors,\n              password: '비밀번호가 일치하지 않습니다.'\n            }\n          });\n          return;\n        }\n        this.setState({\n          formErrors: {\n            ...this.state.formErrors,\n            password: ''\n          }\n        });\n        return;\n      case 'name':\n        if(this.state.name.length <= 1 || this.state.name.length >= 5){\n          this.setState({\n            formErrors :{\n              ...this.state.formErrors,\n              name:'이름이 올바르지 않습니다.'\n            }\n          })\n          return;\n        }\n        this.setState({\n          formErrors:{\n            ...this.state.formErrors,\n            name:''\n          }\n        })\n        break;\n      case 'email':\n        const emailRegex = new RegExp(\n          /^(?:[a-zA-Z0-9])([-_0-9a-zA-Z]+(\\.[-_0-9a-zA-Z]+)*|^\\\"([\\001-\\010\\013\\014\\016-\\037!#-\\[\\]-\\177]|\\\\[\\001-011\\013\\014\\016-\\177])*\\\")@(?:[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?\\.)+[a-zA-Z]{2,6}\\.?$/\n        );\n        if (!emailRegex.test(this.state.email)) {\n          this.setState({\n            formErrors: {\n              ...this.state.formErrors,\n              email: '정확한 이메일을 입력해주세요.'\n            }\n          });\n          break;\n        }\n        this.setState({\n          formErrors: {\n            ...this.state.formErrors,\n            email: ''\n          }\n        });\n        this.handleOverlap(target);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  handleRegister = () => {\n    this.setState({ isLoading: true });\n    if (\n      this.state.formErrors.email ||\n      this.state.formErrors.id ||\n      this.state.formErrors.name ||\n      this.state.formErrors.password\n    ) {\n      alert('잘못 입력된 정보를 다시 확인하세요.');\n      this.setState({ isLoading: false });\n      return;\n    }\n    if (\n      !this.state.email ||\n      !this.state.id ||\n      !this.state.name ||\n      !this.state.password\n    ) {\n      alert('비어있는 정보가 있습니다.');\n      this.setState({ isLoading: false });\n      return;\n    }\n    const queryBody: any = {\n      uid: this.state.id,\n      password: this.state.password,\n      name: this.state.name,\n      email: this.state.email\n    };\n    const queryHeader: any = {\n      'Content-Type': 'application/json'\n    };\n    fetch(apiUri + '/user/', {\n      method: 'POST',\n      body: JSON.stringify(queryBody),\n      headers: queryHeader\n    })\n      .then(res => res.json())\n      .then(data => {\n        switch (data.status) {\n          case 400:\n            alert('Error 400 : ' + data.message);\n            this.setState({ isLoading: false });\n            return;\n          case 422:\n            alert('Error 422 : ' + data.message);\n            this.setState({\n              isLoading: false,\n              formErrors: {\n                ...this.state.formErrors,\n                id: '다른 아이디로 시도해주세요.'\n              },\n              id: ''\n            });\n            return;\n          case 500:\n            alert('Error 500 : ' + data.message);\n            this.setState({ isLoading: false });\n            return;\n        }\n        if (data.state === true) {\n          alert('회원가입에 성공했습니다.');\n          window.location.replace('/login');\n          return;\n        }\n      });\n  };\n\n  handleOverlap = async (target: any) => {\n    const queryBody: any = {\n      type: target.name,\n      content: target.value\n    };\n    const queryHeader: any = {\n      'Content-Type': 'application/json'\n    };\n\n    fetch(apiUri + '/user/overlap/', {\n      method: 'POST',\n      body: JSON.stringify(queryBody),\n      headers: queryHeader\n    })\n      .then(res => res.json())\n      .then(data => {\n        if (data.status === 400) {\n          alert('Client Error : ' + data.message);\n        }\n        if (data.overlap === true) {\n          this.setState({\n            formErrors: {\n              ...this.state.formErrors,\n              [target.name]: '이미 사용중입니다.'\n            }\n          });\n          return;\n        }\n        this.setState({\n          formErrors: {\n            ...this.state.formErrors,\n            [target.name]: ''\n          }\n        });\n        return;\n      })\n      .catch(e => {\n        alert('서버 연결에 실패했습니다 : ' + e);\n        window.location.replace('/');\n      });\n    return;\n  };\n\n  render() {\n    return (\n      <>\n        <div className=\"Style-center\">\n          <GlobalStyle />\n          <div className=\"Blank-small\" />\n          <p\n            className=\"Text-bold\"\n            style={{ letterSpacing: '4px', fontSize: '3rem' }}\n          >\n            REGISTER\n          </p>\n          <div className=\"Blank-xsmall\" />\n          <div className=\"Module-input\">\n            <FormControl\n              placeholder=\"ID\"\n              type=\"id\"\n              size=\"lg\"\n              value={this.state.id}\n              onChange={this.handleChange}\n              name=\"id\"\n            />\n            <div className=\"Blank-xxsmall\" />\n            {this.state.formErrors.id ? (\n              <span className=\"Module-errormessage\">\n                {this.state.formErrors.id}\n              </span>\n            ) : (\n              <span style={{ color: 'black' }}>&nbsp;</span>\n            )}\n            <div className=\"Blank-xxsmall\" />\n            <FormControl\n              placeholder=\"Password\"\n              type=\"password\"\n              size=\"lg\"\n              value={this.state.password}\n              onChange={this.handleChange}\n              name=\"password\"\n            />\n            <div className=\"Blank-xxsmall\" />\n            <FormControl\n              placeholder=\"Verify password\"\n              type=\"password\"\n              size=\"lg\"\n              value={this.state.passwordCheck}\n              onChange={this.handleChange}\n              name=\"passwordCheck\"\n            />\n            <div className=\"Blank-xxsmall\" />\n            {this.state.formErrors.password ? (\n              <span className=\"Module-errormessage\">\n                {this.state.formErrors.password}\n              </span>\n            ) : (\n              <span style={{ color: 'white' }}>&nbsp;</span>\n            )}\n            <div className=\"Blank-xxsmall\" />\n            <FormControl\n              placeholder=\"이름\"\n              type=\"name\"\n              size=\"lg\"\n              value={this.state.name}\n              onChange={this.handleChange}\n              name=\"name\"\n            />\n            <div className=\"Blank-xxsmall\" />\n            {this.state.formErrors.name ? (\n              <span className=\"Module-errormessage\">\n                {this.state.formErrors.name}\n              </span>\n            ) : (\n              <span style={{ color: 'white' }}>&nbsp;</span>\n            )}\n            <div className=\"Blank-xxsmall\" />\n            <FormControl\n              placeholder=\"Email\"\n              type=\"email\"\n              size=\"lg\"\n              value={this.state.email}\n              onChange={this.handleChange}\n              name=\"email\"\n            />\n            <div className=\"Blank-xxsmall\" />\n            {this.state.formErrors.email ? (\n              <span className=\"Module-errormessage\">\n                {this.state.formErrors.email}\n              </span>\n            ) : (\n              <span style={{ color: 'white' }}>&nbsp;</span>\n            )}\n            <div className=\"Blank-xxsmall\" />\n            <p className=\"Text-small Text-xlight\">\n              회원가입 시{' '}\n              <a href=\"/terms\">\n                <b style={{ color: 'skyblue' }}>이용 약관</b>\n              </a>\n              에 동의한 것으로 간주 됩니다.\n            </p>\n            <div className=\"Blank-xsmall\" />\n            <Button\n              size=\"lg\"\n              variant=\"dark\"\n              onClick={this.handleRegister}\n              disabled={this.state.isLoading}\n            >\n              {!this.state.isLoading ? '회원 가입' : 'Loading...'}\n            </Button>\n            <div className=\"Blank-small\" />\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport '../../styles/index.scss';\nimport { Button, InputGroup, FormControl } from 'react-bootstrap';\nimport apiUri from '../api/getApiUri';\nimport styled, { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\nbody {\n  /* margin: 0;\n  padding: 0; */\n  background-color:rgb(24,24,24);\n  color:white;\n  justify-content:center;\n \n}\n.form-control{\n  background-color: rgb(60,60,60) !important;\n  color: white !important;\n  border-color: black !important;\n}`;\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  word-break: break-all;\n`;\n\nexport default class Mypage extends Component {\n  state = {\n    id: '',\n    email: '',\n    name: '',\n\n    login: false\n  };\n  handleFetchUserData = () => {\n    const queryHeader: any = {\n      'x-access-token': sessionStorage.getItem('token')\n    };\n    try {\n      fetch(apiUri + '/user/data', {\n        method: 'POST',\n        headers: queryHeader\n      })\n        .then(res => res.json())\n        .then(data => {\n          if (data.status) {\n            const error: any = 'Error ' + data.status + ' : ' + data.message;\n            this.handleTokenVerifyFail(error);\n          }\n          this.setState({\n            login: true,\n            id: data.uid,\n            email: data.email,\n            name: data.name\n          });\n        })\n        .catch(e => {\n          this.handleTokenVerifyFail(e);\n        });\n    } catch (e) {\n      alert('err');\n    }\n  };\n\n  handleTokenVerifyFail = (error: string) => {\n    localStorage.removeItem('token');\n    sessionStorage.removeItem('token');\n    window.location.replace('/');\n    alert(error);\n  };\n\n  componentWillMount() {\n    this.handleFetchUserData();\n  }\n\n  render() {\n    return (\n      <>\n        <GlobalStyle />\n        <div className=\"Blank-small\" />\n        <Wrapper>\n          <p\n            style={{ fontSize: '3rem', fontWeight: 900, letterSpacing: '4px' }}\n          >\n            MY PAGE\n          </p>\n          <div className=\"Module-input w-50\">\n            <div className=\"Blank-small\" />\n            <InputGroup>\n              <InputGroup.Prepend>\n                <InputGroup.Text>ID</InputGroup.Text>\n              </InputGroup.Prepend>\n              <FormControl value={this.state.id} />\n            </InputGroup>\n            <div className=\"Blank-xsmall\" />\n            <InputGroup>\n              <InputGroup.Prepend>\n                <InputGroup.Text>Email</InputGroup.Text>\n              </InputGroup.Prepend>\n              <FormControl value={this.state.email} />\n              <InputGroup.Append>\n                <Button variant=\"dark\">변경</Button>\n              </InputGroup.Append>\n            </InputGroup>\n            <div className=\"Blank-xxsmall\" />\n            <InputGroup>\n              <InputGroup.Prepend>\n                <InputGroup.Text>name</InputGroup.Text>\n              </InputGroup.Prepend>\n              <FormControl value={this.state.name} />\n              <InputGroup.Append>\n                <Button variant=\"dark\">변경</Button>\n              </InputGroup.Append>\n            </InputGroup>\n          </div>\n        </Wrapper>\n      </>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport styled, { createGlobalStyle } from 'styled-components';\nimport '../../styles/index.scss';\nconst GlobalStyle = createGlobalStyle`\n* {\n  margin: 0;\n  padding: 0;\n  background-color:rgb(24,24,24);\n  color:white !important;\n}\n.form-control{\n  \n  background-color: rgb(60,60,60) !important;\n  color: white !important;\n  border-color: black !important;\n\n}`;\nexport default class FindPassword extends Component {\n  render() {\n    return (\n      <>\n        <GlobalStyle />\n        <p className=\"Text-medium Text-bold\">Text</p>\n      </>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport styled, { createGlobalStyle } from 'styled-components';\nimport '../../styles/tailwind.css';\n\nconst GlobalStyle = createGlobalStyle`\n* {\n  margin: 0;\n  padding: 0;\n  background-color:rgb(24,24,24);\n  color:white !important;\n}\n.form-control{\n  \n  background-color: rgb(60,60,60) !important;\n  color: white !important;\n  border-color: black !important;\n\n}`;\nexport default class UploadProducts extends Component {\n  render() {\n    return (\n      <>\n        <GlobalStyle />\n      </>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport styled, { createGlobalStyle } from 'styled-components';\n\nimport '../../styles/index.scss';\nconst GlobalStyle = createGlobalStyle`\n* {\n  margin: 0;\n  padding: 0;\n  background-color:rgb(24,24,24);\n  color:white;\n}\nbody{\n  background-color:rgb(24,24,24);\n}\n.form-control{\n  \n  background-color: rgb(60,60,60) !important;\n  color: white !important;\n  border-color: black !important;\n\n\n}`;\n\nconst Wrapper = styled.div`\n  text-align: center;\n`;\n\nexport default class Terms extends Component {\n  render() {\n    return (\n      <>\n        <GlobalStyle />\n        <Wrapper>\n          <div className=\"Blank-small\" />\n          <p className=\"Text-large Text-bold\">이용 약관</p>\n        </Wrapper>\n        <div style={{ margin: '3rem' }}>\n          <h1>홈페이지 이용약관</h1>\n          <h2>MARKTWO (2019.11.24)</h2>\n          제 1장 총칙\n          <br />\n          제 1조 (목적)\n          <br />\n          본 약관은 MARKTWO 사이트(이하 \"당 사이트\")가 제공하는 모든 서비스(이하\n          \"서비스\")의 이용조건 및 절차, 이용자와 당 사이트의 권리, 의무,\n          책임사항과 기타 필요한 사항을 규정함을 목적으로 합니다.\n          <br />\n          제 2조 (약관의 명시와 개정)\n          <br />\n          <br />\n          * 당 사이트는 이 약관의 내용 등을 이용자가 알 수 있도록 당 사이트의\n          회원가입 화면에 게시합니다.\n          <br />\n          * 당 사이트는 약관의 규제에 관한 법률, 전자거래기본법, 전자서명법,\n          개인정보보호법 등 관련법을 위배하지 않는 범위에서 이 약관을 개정할 수\n          있습니다.\n          <br />\n          * 당 사이트가 약관을 개정할 경우에는 적용일자 및 개정사유를 명시하여\n          현행약관과 함께 당 사이트의 초기화면에 그 적용일자 7일 이전부터\n          적용일자 전일까지 공지합니다.\n          <br />\n          * 당 사이트는 이용자가 본 약관 내용에 동의하는 것을 조건으로\n          이용자에게 서비스를 제공할 것이며, 이용자가 본 약관의 내용에 동의하는\n          경우, 당 사이트의 서비스 제공 행위 및 이용자의 서비스 사용 행위에는 본\n          약관이 우선적으로 적용될 것입니다.\n          <br />\n          * 이 약관에 동의하는 것은 정기적으로 웹을 방문하여 약관의 변경사항을\n          확인하는 것에 동의함을 의미합니다. 변경된 약관에 대한 정보를 알지 못해\n          발생하는 이용자의 피해는 당 사이트에서 책임지지 않습니다.\n          <br />\n          * 본 약관에 명시되지 않은 사항은 전기통신기본법, 전기통신사업법,\n          방송통신심의위원회 정보통신에 관한 심의규정, 저작권법 및 기타 관련\n          법령의 규정에 의합니다.\n          <br />\n          제 3조 (용어의 정의)\n          <br />\n          본 약관에서 사용하는 용어의 정의는 다음과 같습니다.\n          <br />\n          * 이용자 : 본 약관에 따라 당 사이트가 제공하는 서비스를 받는 자.\n          <br />\n          * 이용계약 : 서비스 이용과 관련하여 당 사이트와 이용자 간에 체결하는\n          계약을 말합니다.\n          <br />\n          * 신 청 : 당 사이트가 제공하는 신청서 양식에 해당 정보를 기입하고, 본\n          약관에 동의하여 서비스 이용계약을 완료시키는 행위\n          <br />\n          * 본 약관에서 정의하지 않은 용어는 개별서비스에 대한 별도약관 및\n          이용규정에서 정의합니다.\n          <br />\n          제 2장 이용계약의 성립 및 해지\n          <br />\n          <br />\n          제 4조 (이용계약의 성립)\n          <br />\n          * 이용계약은 이용자가 본 이용약관 내용에 대한 동의와 이용신청에 대하여\n          당 사이트의 이용승낙으로 성립합니다.\n          <br />\n          * 본 이용약관에 대한 동의는 이용신청 당시 해당 당 사이트의 ‘회원가입’\n          또는 신청(등록)버튼을 누름으로써 의사표시를 합니다.\n          <br />\n          제 5조 (개인정보 사용에 대한 동의)\n          <br />\n          * 이용자의 개인정보에 대해서는 당 사이트의 개인정보 처리방침이\n          적용됩니다. 다만, 당 사이트 이외의 링크된 사이트에서는 당 사이트의\n          개인정보 처리방침이 적용되지 않습니다.\n          <br />\n          제 5-1조 (수집하는 개인정보)\n          <br/>\n          당 사이트에서는 원활한 서비스의 제공을 위해 다음과 같은 정보를 수집합니다.\n          <br/>\n          IP주소, 이름, 이메일\n          <br/>\n          제 6조 (사용자의 정보 보안)\n          <br />\n          * 이용자가 당 사이트 서비스 신청 절차를 완료하는 순간부터 이용자는\n          입력한 정보의 비밀을 유지할 책임이 있습니다.\n          <br/>\n          모든 서버와의 통신은 암호화되어 이루어지며, 비밀번호는 복호화 불능 단방향 암호화로 암호화 됩니다.\n          <br />\n          * 이용자가 입력한 정보에 관한 모든 관리의 책임은 이용자에게 있으며,\n          이용자가 입력한 정보가 부정하게 사용되었다는 사실을 발견한 경우에는\n          즉시 당 사이트에 알려주셔야 합니다. 알리지 않음으로 인해 발생하는 모든\n          책임은 이용자 본인에게 있습니다.\n          <br />\n          제 3장 서비스의 이용\n          <br />\n          <br />\n          제 7조 (서비스 이용시간)\n          <br />\n          * 서비스 이용시간은 당 사이트의 업무상 또는 기술상 특별한 지장이 없는\n          한 연중무휴, 1일 24시간을 원칙으로 합니다.\n          <br />\n          * 제1항의 이용시간 중 정기점검 등의 필요로 인하여 당 사이트가 정한 날\n          또는 시간은 예외로 합니다.\n          <br />\n          제 8조 (서비스의 중지 및 중지에 대한 공지)\n          <br />\n          * 당 사이트 서비스에 보관되거나 전송된 메시지 및 기타 통신 메시지 등의\n          내용이 국가의 비상사태, 정전, 당 사이트의 관리 범위 외의 서비스 설비\n          장애 및 기타 불가항력에 의하여 보관되지 못하였거나 삭제된 경우,\n          전송되지 못한 경우 및 기타 통신 데이터의 손실이 있을 경우에 당\n          사이트는 관련 책임을 부담하지 아니합니다.\n          <br />\n          * 당 사이트가 정상적인 서비스 제공의 어려움으로 인하여 일시적으로\n          서비스를 중지하여야 할 경우에는 서비스 중지 1주일 전에 홈페이지에\n          서비스 중지사유 및 일시를 공지한 후 서비스를 중지할 수 있으며, 이 기간\n          동안 이용자가 공지내용을 인지하지 못한 데 대하여 당 사이트는 책임을\n          부담하지 아니합니다. 부득이한 사정이 있을 경우 위 사전 공지기간은\n          감축되거나 생략될 수 있습니다. 또한 위 서비스 중지에 의하여 본\n          서비스에 보관되거나 전송된 메시지 및 기타 통신 메시지 등의 내용이\n          보관되지 못하였거나 삭제된 경우, 전송되지 못한 경우 및 기타 통신\n          데이터의 손실이 있을 경우에 대하여도 당 사이트는 책임을 부담하지\n          아니합니다.\n          <br />\n          * 당 사이트의 사정으로 서비스를 영구적으로 중단하여야 할 경우에는 제 2\n          항에 의거합니다. 다만, 이 경우 사전 공지기간은 1개월로 합니다.\n          <br />\n          * 당 사이트는 사전 공지 후 서비스를 일시적으로 수정, 변경 및 중단할 수\n          있으며, 이에 대하여 이용자 또는 제3자에게 어떠한 책임도 부담하지\n          아니합니다.\n          <br />\n          * 당 사이트는 긴급한 시스템 점검, 증설 및 교체 등 부득이한 사유로\n          인하여 예고없이 일시적으로 서비스를 중단할 수 있으며, 새로운\n          서비스로의 교체 등 당 사이트가 적절하다고 판단하는 사유에 의하여 현재\n          제공되는 서비스를 완전히 중단할 수 있습니다.\n          <br />\n          * 당 사이트는 국가비상사태, 정전, 서비스 설비의 장애 또는 서비스\n          이용의 폭주 등으로 정상적인 서비스 제공이 불가능할 경우, 서비스의 전부\n          또는 일부를 제한하거나 중지할 수 있습니다. 다만 이 경우 그 사유 및\n          기간 등을 이용자에게 사전 또는 사후에 공지합니다.\n          <br />\n          * 당 사이트는 당 사이트가 통제할 수 없는 사유로 인한 서비스중단의\n          경우(시스템관리자의 고의•과실 없는 디스크장애, 시스템다운 등)에\n          사전통지가 불가능하며 타인(PC통신회사, 기간통신사업자 등)의\n          고의•과실로 인한 시스템중단 등의 경우에는 통지하지 않습니다.\n          <br />\n          * 당 사이트는 서비스를 특정범위로 분할하여 각 범위별로 이용가능시간을\n          별도로 지정할 수 있습니다. 다만 이 경우 그 내용을 공지합니다.\n          <br />\n          * 당 사이트는 이용자가 본 약관의 내용에 위배되는 행동을 한 경우,\n          임의로 서비스 사용을 제한 및 중지하거나 이용자의 동의 없이 이용계약을\n          해지할 수 있습니다. 이 경우 당 사이트는 위 이용자의 접속을 금지할 수\n          있습니다.\n          <br />\n          제 9조 (정보 제공 및 홍보물 게재)\n          <br />\n          <br />\n          * 당 사이트는 서비스를 운영함에 있어서 각종 정보를 홈페이지에 게재하는\n          방법, 전자우편이나 서신우편 발송 등으로 이용자에게 제공할 수 있습니다.\n          <br />\n          * 당 사이트는 서비스에 적절하다고 판단되거나 공익성이 있는 홍보물을\n          게재할 수 있습니다.\n          <br />\n          * 이용자가 게시한 게시물의 내용에 대한 권리는 해당 게시물을 등록한\n          이용자에게 있습니다.\n          <br />\n          * 당 사이트는 게시된 내용을 사전 통지 없이 편집, 이동할 수 있는 권리를\n          보유하며, 다음의 경우 사전 통지 없이 삭제할 수 있습니다.\n          <br />\n          * ① 욕설·특정인에 대한 비방 등 인권침해 소지가 있는 경우\n          <br />\n          * ② 성인 게시물 등 공공질서 및 미풍양속에 위반되는 내용인 경우\n          <br />\n          * ③ 악의적으로 허위사실을 유포한 경우\n          <br />\n          * ④ 제3자의 저작권 등 기타 권리를 침해하는 내용인 경우\n          <br />\n          * ⑤ 상업적 목적이 있는 경우\n          <br />\n          * ⑥ 동일한 내용의 반복 게시\n          <br />\n          * ⑦ 게시자가 자신이 등록한 게시물의 삭제를 요구한 경우\n          <br />\n          * ⑧ 기타 홈페이지의 정상적인 운영을 저해하는 표현 또는 내용\n          <br />\n          * 이용자의 게시물이 타인의 저작권을 침해함으로써 발생하는 민, 형사상의\n          책임은 전적으로 해당 게시물을 등록한 이용자가 부담하여야 합니다.\n          <br />\n          제 11조 (서비스 이용제한)\n          <br />\n          <br />\n          * 이용자가 제공하는 정보의 내용이 허위인 것으로 판명되거나, 허위가\n          있다고 의심할 만한 합리적인 사유가 발생할 경우 당 사이트는 이용자의 본\n          서비스 사용을 일부 또는 전부 중지할 수 있으며, 이로 인해 발생하는\n          불이익에 대해 책임을 부담하지 아니합니다.\n          <br />\n          * 당 사이트는 이용자가 본 약관 제15조(회원의 의무)등 본 약관의 내용에\n          위배되는 행동을 한 경우, 임의로 서비스 사용을 제한 및 중지할 수\n          있습니다. 이 경우 당 사이트는 이용자의 접속을 금지할 수 있습니다.\n          <br />\n          제 4장 의무 및 책임\n          <br />\n          제 12조 (당 사이트의 의무)\n          <br />\n          * 당 사이트는 법령과 본 약관이 금지하거나 미풍양속에 반하는 행위를\n          하지 않으며, 지속적·안정적으로 서비스를 제공하기 위해 노력할 의무가\n          있습니다.\n          <br />\n          * 당 사이트는 이용자의 개인 신상 정보를 본인의 승낙 없이 타인에게\n          누설, 배포하지 않습니다. 다만, 관계법령에 의하여 관계 국가기관 등의\n          요구가 있는 경우에는 그러하지 아니합니다.\n          <br />\n          * 당 사이트는 이용자가 안전하게 당 사이트서비스를 이용할 수 있도록\n          이용자의 개인정보 보호를 위한 보안시스템을 갖추어야 합니다.\n          <br />\n          * 당 사이트는 이용자의 귀책사유로 인한 서비스 이용 장애에 대하여\n          책임을 지지 않습니다.\n          <br />\n          제 13조 (이용자의 의무)\n          <br />\n          <br />\n          * 이용자는 당 사이트의 사전 승낙 없이 서비스를 이용하여 어떠한\n          영리행위도 할 수 없습니다.\n          <br />\n          * 이용자는 당 사이트 서비스를 이용하여 얻은 정보를 당 사이트의\n          사전승낙 없이 복사, 복제, 변경, 번역, 출판, 방송 기타의 방법으로\n          사용하거나 이를 타인에게 제공할 수 없습니다.\n          <br />\n          * 이용자가 당 사이트에서 다운로드받아 활용하는 모든 행위는 전적으로\n          이용자 책임입니다. 당 사이트에서는 이에 대해 책임을 지지 않습니다.\n          <br />\n          * 이용자는 당 사이트 서비스 이용과 관련하여 다음 각 호의 행위를\n          하여서는 안 됩니다.\n          <br />\n          * ① 다른 이용자의 개인정보를 부정 사용하는 행위\n          <br />\n          * ② 저속, 음란, 모욕적, 위협적이거나 타인의 사생활을 침해할 수 있는\n          내용을 전송, 게시, 게재, 전자우편 또는 기타의 방법으로 전송하는 행위\n          <br />\n          * ③ 서비스를 통하여 전송된 내용의 출처를 위장하는 행위\n          <br />\n          * ④ 법률, 계약에 의해 이용할 수 없는 내용을 게시, 게재, 전자우편 또는\n          기타의 방법으로 전송하는 행위\n          <br />\n          * ⑤ 타인의 특허, 상표, 영업비밀, 저작권, 기타 지적재산권을 침해하는\n          내용을 게시, 게재, 전자우편 또는 기타의 방법으로 전송하는 행위\n          <br />\n          * ⑥ 당 사이트의 승인을 받지 아니한 광고, 판촉물, 스팸메일, 행운의\n          편지, 피라미드 조직 기타 다른 형태의 권유를 게시, 게재, 전자우편 또는\n          기타의 방법으로 전송하는 행위\n          <br />\n          * ⑦ 다른 사용자의 개인정보를 수집 또는 저장하는 행위\n          <br />\n          * ⑧ 범죄행위를 목적으로 하거나 기타 범죄행위와 관련된 행위\n          <br />\n          * ⑨ 선량한 풍속, 기타 사회질서를 해하는 행위\n          <br />\n          * ⑩ 타인의 명예를 훼손하거나 모욕하는 행위\n          <br />\n          * ⑪ 타인의 지적재산권 등의 권리를 침해하는 행위\n          <br />\n          * ⑫ 해킹행위 또는 컴퓨터바이러스의 유포행위\n          <br />\n          * ⑬ 타인의 의사에 반하여 광고성 정보 등 일정한 내용을 지속적으로\n          전송하는 행위\n          <br />\n          * ⑭ 서비스의 안전적인 운영에 지장을 주거나 줄 우려가 있는 일체의 행위\n          <br />\n          * ⑮ 당 사이트에 게시된 정보의 변경\n          <br />\n          제 5장 기타\n          <br />\n          <br />\n          제 14조 (당 사이트의 소유권)\n          <br />\n          * 당 사이트가 제공하는 서비스, 그에 필요한 소프트웨어, 이미지, 마크,\n          로고, 디자인, 서비스명칭, 정보 및 상표 등과 관련된 지적재산권 및 기타\n          권리는 당 사이트에 소유권이 있습니다.\n          <br />\n          * 이용자는 당 사이트가 명시적으로 승인한 경우를 제외하고는 전항의\n          소정의 각 재산에 대한 전부 또는 일부의 수정, 대여, 대출, 판매, 배포,\n          제작, 양도, 재라이센스, 담보권 설정 행위, 상업적 이용 행위를 할 수\n          없으며, 제3자로 하여금 이와 같은 행위를 하도록 허락할 수 없습니다.\n          <br />\n          제 15조 (손해배상)\n          <br />\n          <br />\n          당 사이트는 무료로 제공되는 서비스와 관련하여 이용자에게 어떠한 손해가\n          발생하더라도 당 사이트가 고의로 행한 범죄행위를 제외하고는 이에 대하여\n          책임을 부담하지 아니합니다.\n          <br />\n          제 16조 (면책조항)\n          <br />\n          * 당 사이트는 천재지변, 전쟁 및 기타 이에 준하는 불가항력으로 인하여\n          서비스를 제공할 수 없는 경우에는 서비스 제공에 대한 책임이 면제됩니다.\n          <br />\n          * 당 사이트는 기간통신 사업자가 전기통신 서비스를 중지하거나\n          정상적으로 제공하지 아니하여 손해가 발생한 경우 책임이 면제됩니다.\n          <br />\n          * 당 사이트는 서비스용 설비의 보수, 교체, 정기점검, 공사 등 부득이한\n          사유로 발생한 손해에 대한 책임이 면제됩니다.\n          <br />\n          * 당 사이트는 이용자의 컴퓨터 오류에 의해 손해가 발생한 경우, 또는\n          이용자가 신상정보 및 전자우편 주소를 부실하게 기재하여 손해가 발생한\n          경우 책임을 지지 않습니다.\n          <br />\n          * 당 사이트는 서비스에 표출된 어떠한 의견이나 정보에 대해 확신이나\n          대표할 의무가 없으며 회원이나 제3자에 의해 표출된 의견을 승인하거나\n          반대하거나 수정하지 않습니다. 당 사이트는 어떠한 경우라도 이용자가\n          서비스에 담긴 정보에 의존해 얻은 이득이나 입은 손해에 대해 책임이\n          없습니다.\n          <br />\n          * 당 사이트는 이용자간 또는 이용자와 제3자간에 서비스를 매개로 하여\n          물품거래 혹은 금전적 거래 등과 관련하여 어떠한 책임도 부담하지\n          아니하고, 이용자가 서비스의 이용과 관련하여 기대하는 이익에 관하여\n          책임을 부담하지 않습니다.\n          <br />\n          * 당 사이트는 이용자가 서비스를 이용하여 기대하는 손익이나 서비스를\n          통하여 얻은 자료로 인한 손해에 관하여 책임을 지지 않으며, 이용자가 본\n          서비스에 게재한 정보, 자료, 사실의 신뢰도 등 내용에 관하여는 책임을\n          지지 않습니다.\n          <br />\n          * 당 사이트는 서비스 이용과 관련하여 이용자에게 발생한 손해 중\n          이용자의 고의, 과실에 의한 손해에 대하여 책임을 부담하지 아니합니다.\n          <br />\n          * 당 사이트는 당 사이트가 제공한 서비스가 아닌 이용자 또는 기타\n          유관기관이 제공하는 서비스의 내용상의 정확성, 완전성 및 질에 대하여\n          보장하지 않습니다. 따라서 당 사이트는 이용자가 위 내용을 이용함으로\n          인하여 입게 된 모든 종류의 손실이나 손해에 대하여 책임을 부담하지\n          아니합니다. 또한 당 사이트는 이용자가 서비스를 이용하며 타 이용자로\n          인해 입게 되는 정신적 피해에 대하여 보상할 책임을 지지 않습니다.\n          <br />\n          제 17조 (관할법원)\n          <br />\n          <br />\n          본 서비스 이용과 관련하여 발생한 분쟁에 대해 소송이 제기될 경우\n          서울지방법원 본원을 전속적 관할 법원으로 합니다.\n          <br />\n          ※ 부 칙<br />\n          (시행일) 본 약관은 2019년 11월 24일부터 시행합니다.\n        </div>\n      </>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport '../../../styles/tailwind.css';\nimport styled, { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\n* {\n  margin: 0;\n  padding: 0;\n  background-color:rgb(24,24,24);\n  color: white !important ;\n}\n.form-control{\n  \n  background-color: rgb(60,60,60) !important;\n  color: white !important;\n  border-color: black !important;\n\n}`;\nexport default class Product extends Component<any> {\n  constructor(props: any) {\n    super(props);\n  }\n  state = {\n    img: this.props.img,\n    title: this.props.title,\n    content: this.props.content,\n    link: this.props.link,\n    maclink: this.props.maclink\n  };\n  handleOpenLink = () => {\n    window.location.replace(this.state.link);\n  };\n  handleOpenMacLink = () => {\n    window.location.replace(this.state.maclink);\n  };\n  render() {\n    const windowLink = (\n      <button\n        className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-full\"\n        onClick={this.handleOpenLink}\n      >\n        Download\n      </button>\n    );\n\n    const windowMacLink = (\n      <>\n        <button\n          className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-full\"\n          onClick={this.handleOpenLink}\n          style={{ marginRight: '1rem' }}\n        >\n          Windows\n        </button>\n        <button\n          className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-full\"\n          onClick={this.handleOpenMacLink}\n        >\n          Mac\n        </button>\n      </>\n    );\n    return (\n      <>\n        <GlobalStyle />\n        <div\n          className=\"max-w-sm rounded overflow-hidden shadow-lg\"\n          style={{ margin: '1rem' }}\n        >\n          <img className=\"w-full\" src={this.state.img} alt=\"Product Photo\" />\n          <div className=\"px-6 py-4\">\n            <div className=\"font-bold text-xl mb-2\">{this.state.title}</div>\n            <p className=\"text-700 text-base\">{this.state.content}</p>\n          </div>\n          <div\n            className=\"px-6 py-4\"\n            style={{ display: 'flex', justifyContent: 'center' }}\n          >\n            {!this.state.maclink ? windowLink : windowMacLink}\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport Product from './Product';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n`;\n\nexport default class ProductList extends Component<any> {\n  static defaultProps = {\n    data: []\n  };\n\n  render() {\n    let data;\n    let list;\n    try {\n      data = JSON.parse(this.props.data);\n      list = data.map((info: any) => (\n        <Product\n          key={info.id}\n          title={info.title}\n          img={info.img}\n          content={info.content}\n          link={info.link}\n          maclink={info.maclink}\n        />\n      ));\n    } catch (e) {\n      console.log(e);\n      list = (\n        <Product\n          key=\"0\"\n          img=\"http://marktwo.iptime.org:35492/list/HDD1/SUNRINT_SHARE/static/404error.png\"\n          content=\"표시할 데이터가 없습니다.\"\n          title=\"데이터가 없습니다.\"\n          link=\"/\"\n        />\n      );\n    }\n\n    return <Wrapper>{list}</Wrapper>;\n  }\n}\n","import React, { Component } from 'react';\nimport styled, { createGlobalStyle } from 'styled-components';\nimport Product from './components/Product';\nimport apiUri from '../api/getApiUri';\nimport ProductInfoList from './components/ProductInfoList';\nimport '../../styles/index.scss';\nconst GlobalStyle = createGlobalStyle`\n* {\n  margin: 0;\n  padding: 0;\n  color : rgb(24,24,24);\n}\nbody {\n    background-color:rgb(24,24,24);\n    overflow-y:visible;\n}\n\n`;\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n`;\nexport default class Comsil extends Component {\n  state = {\n    data: null\n  };\n\n  handleDataRecieve = async () => {\n    // const queryHeader: any = {\n    //   'Content-Type': 'application/json'\n    // };\n    await fetch(apiUri + '/data/comsil', {\n      method: 'GET'\n      //   headers: queryHeader\n    })\n      .then(res => res.json())\n      .then(data => {\n        this.setState({\n          data: JSON.stringify(data.result)\n        });\n      })\n      .catch(e => {\n        alert(e);\n      });\n  };\n\n  componentWillMount() {\n    this.handleDataRecieve();\n  }\n  render() {\n    return (\n      <>\n        <GlobalStyle />\n        <div className=\"Blank-small\" />\n        <Wrapper>\n          <div className=\"Blank-small\" />\n          <p className=\"Text-medium Text-bold\">컴실유틸</p>\n        </Wrapper>\n        <Wrapper>\n          <ProductInfoList data={this.state.data} />\n        </Wrapper>\n      </>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport styled, { createGlobalStyle } from 'styled-components';\nimport ProductInfoList from './components/ProductInfoList';\nimport apiUri from '../api/getApiUri';\n\nconst GlobalStyle = createGlobalStyle`\n* {\n  margin: 0;\n  padding: 0;\n  background-color:rgb(24,24,24);\n  color:white;\n}\n.form-control{\n  \n  background-color: rgb(60,60,60) !important;\n  color: white !important;\n  border-color: black !important;\n  :focus{\n    /* background-color:black; */\n  }\n\n}`;\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n`;\n\nexport default class Utilty extends Component {\n  state = { data: null };\n\n  handleDataRecieve = async () => {\n    // const queryHeader: any = {\n    //   'Content-Type': 'application/json'\n    // };\n    await fetch(apiUri + '/data/utility', {\n      method: 'GET'\n      //   headers: queryHeader\n    })\n      .then(res => res.json())\n      .then(data => {\n        this.setState({\n          data: JSON.stringify(data.result)\n        });\n      })\n      .catch(e => {\n        alert(e);\n      });\n  };\n  componentWillMount() {\n    this.handleDataRecieve();\n  }\n  render() {\n    return (\n      <>\n        <GlobalStyle />\n        <div className=\"Blank-small\" />\n        <Wrapper>\n          <div className=\"Blank-small\" />\n          <p className=\"Text-medium Text-bold\">유틸리티</p>\n        </Wrapper>\n        <Wrapper>\n          <ProductInfoList data={this.state.data} />\n        </Wrapper>\n      </>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport styled, { createGlobalStyle } from 'styled-components';\nimport Product from './components/Product';\nimport apiUri from '../api/getApiUri';\nimport ProductInfoList from './components/ProductInfoList';\nimport '../../styles/index.scss';\nconst GlobalStyle = createGlobalStyle`\n* {\n  margin: 0;\n  padding: 0;\n  color : rgb(24,24,24);\n}\nbody {\n    background-color:rgb(24,24,24);\n    overflow-y:visible;\n}\n\n`;\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n`;\nexport default class Comsil extends Component {\n  state = {\n    data: null\n  };\n\n  handleDataRecieve = async () => {\n    // const queryHeader: any = {\n    //   'Content-Type': 'application/json'\n    // };\n    await fetch(apiUri + '/data/graphics', {\n      method: 'GET'\n      //   headers: queryHeader\n    })\n      .then(res => res.json())\n      .then(data => {\n        this.setState({\n          data: JSON.stringify(data.result)\n        });\n      })\n      .catch(e => {\n        alert(e);\n      });\n  };\n\n  componentWillMount() {\n    this.handleDataRecieve();\n  }\n  render() {\n    return (\n      <>\n        <GlobalStyle />\n        <div className=\"Blank-small\" />\n        <Wrapper>\n          <div className=\"Blank-small\" />\n          <p className=\"Text-medium Text-bold\">그래픽 툴</p>\n        </Wrapper>\n        <Wrapper>\n          <ProductInfoList data={this.state.data} />\n        </Wrapper>\n      </>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport styled, { createGlobalStyle } from 'styled-components';\nimport Product from './components/Product';\nimport apiUri from '../api/getApiUri';\nimport ProductInfoList from './components/ProductInfoList';\nimport '../../styles/index.scss';\nconst GlobalStyle = createGlobalStyle`\n* {\n  margin: 0;\n  padding: 0;\n  color : rgb(24,24,24);\n}\nbody {\n    background-color:rgb(24,24,24);\n    overflow-y:visible;\n}\n\n`;\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n`;\nexport default class Comsil extends Component {\n  state = {\n    data: null\n  };\n\n  handleDataRecieve = async () => {\n    // const queryHeader: any = {\n    //   'Content-Type': 'application/json'\n    // };\n    await fetch(apiUri + '/data/game', {\n      method: 'GET'\n      //   headers: queryHeader\n    })\n      .then(res => res.json())\n      .then(data => {\n        this.setState({\n          data: JSON.stringify(data.result)\n        });\n      })\n      .catch(e => {\n        alert(e);\n      });\n  };\n\n  componentWillMount() {\n    this.handleDataRecieve();\n  }\n  render() {\n    return (\n      <>\n        <GlobalStyle />\n        <div className=\"Blank-small\" />\n        <Wrapper>\n          <div className=\"Blank-small\" />\n          <p className=\"Text-medium Text-bold\">게임</p>\n        </Wrapper>\n        <Wrapper>\n          <ProductInfoList data={this.state.data} />\n        </Wrapper>\n      </>\n    );\n  }\n}\n","import React from 'react';\n\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Headroom from 'react-headroom';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './styles/index.scss';\n\nimport Header from './routes/components/header';\nimport Home from './routes/main/home';\nimport Login from './routes/main/login';\nimport Notfound from './routes/util/notfound';\nimport Logout from './routes/util/logout';\nimport Register from './routes/main/register';\nimport Mypage from './routes/main/mypage';\nimport FindPassword from './routes/util/FindPassword';\nimport UploadProducts from './routes/util/UploadProducts';\nimport Terms from './routes/etc/Terms';\n\nimport Comsil from './routes/service/Comsil';\nimport Utility from './routes/service/Utility';\nimport Graphics from './routes/service/Graphics'\nimport Game from './routes/service/Game'\n\nclass App extends React.Component {\n  constructor(props: any) {\n    super(props);\n    document.title = '반성하세요 - dodol:i';\n  }\n  render() {\n    return (\n      <div>\n        <Headroom>\n          <Header />\n        </Headroom>\n        <Router>\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path=\"/logout\" component={Logout} />\n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/mypage\" component={Mypage} />\n            <Route exact path=\"/terms\" component={Terms} />\n\n            <Route exact path=\"/service/comsil\" component={Comsil} />\n            <Route exact path=\"/service/utility\" component={Utility} />\n            <Route exact path='/service/graphics' component={Graphics}/>\n            <Route exact path='/service/game' component={Game}/>\n\n            <Route exact path=\"/find/password\" component={FindPassword} />\n\n            <Route exact path=\"/admin/upload\" component={UploadProducts} />\n\n            <Route component={Notfound} />\n          </Switch>\n        <div className='Blank-small'/>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nrequire('dotenv').config();\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}